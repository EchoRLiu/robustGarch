% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rg-robGarch.R
\name{robGarch}
\alias{robGarch}
\title{Robust Estimates for GARCH(1,1) Model}
\usage{
robGarch(
  data,
  methods = c("BM", "M", "QML", "MLE"),
  fixed_pars = c(0.8, 3),
  optimizer = c("Rsolnp", "nloptr", "nlminb"),
  optimizer_x0 = FALSE,
  optimizer_control = list(),
  stdErr_method = c("numDeriv", "optim", "sandwich")
)
}
\arguments{
\item{data}{a time series of log returns, need to be numeric value.}

\item{methods}{robust M-Estimate method used for Garch(1,1) model, "M" and "BM", or non-robust M-Estimate method, "QML" and "MLE". Default is "BM".}

\item{fixed_pars}{a named numeric vector of parameters to be kept fixed during optimization, and they are needed for parameter estimation. For "M", the parameter should be c, which controls the modified loss function, user can use default c = .8; for "BM", the parameters should be c(c, k), where c is the same as in "M", user can use default c = 0.8,  and k (k > 0) is to control the robustness, the smaller k is, the more robust the method would be, user can use default k = 3.}

\item{optimizer}{optimizer used for optimization, one of "nloptr", "Rsolnp", "nlminb", default is "Rsolnp".}

\item{optimizer_x0}{user-defined starting point for searching the optimum, c(x0_alpha0, x0_alpha1, x0_beta1) or c(x0_alpha0, x0_alpha1, x0_beta1, x0_shape) when the methods is "MLE". Default is "FALSE", where the starting point will be calculated instead of being user-defined.}

\item{optimizer_control}{list of control arguments passed to the optimizer}

\item{stdErr_method}{method used to calculate standard error, one of "numDerive", "optim", "sandwich", default is "numDeriv" using hessian from numDeriv}
}
\value{
A \code{rg} object(S3), the components of the object are:
    \item{data}{the log returns data object for the rg model to be fitted}
    \item{methods}{the method called}
    \item{fixed_pars}{named numeric vector of fixed parameters used}
    \item{optimizer}{the optimizer called}
    \item{optimizer_x0}{user-defined or calculated starting point for searching the optimum}
    \item{optimizer_control}{the list of control arguments passed to the optimizer}
    \item{optimizer_result}{output of the called optimizer}
    \item{stdErr_method}{the method called to calculate standard error}
    \item{QML}{logical argument controlling the non-robustness of the fitting method}
    \item{fitted_pars}{Garch(1,1) parameter estimations output of the called method}
    \item{objective}{the optimal likihood value obtained by the optimizer}
    \item{time_elapsed}{the time used for the optimization routine}
    \item{message}{the message of the convergence status produced by the called solver}
    \item{standard_error}{standard erros of the fitted parameters using the method called}
    \item{t_value}{t-values of alpha_0, alpha_1, beta_1, shape as well for methods "MLE"}
    \item{p_value}{p-values of alpha_0, alpha_1, beta_1, shape as well for methods "MLE"}
}
\description{
Methods for fitting a Garch(1,1) model with daily log return time series, using two methods of robust extended M-Estimates:
(1) maximizing modified likelihood function;
(2) M-Estimates with bounds to the propagation of the effect of one outlier on the subsequent predictors of the conditional variances.
returns a \code{rg} object
}
\details{
The \code{robGarch} function fits a Garch(1, 1) model to a time series of log return data, using one of the two methods of robust extended M-Estimates with certain parameters specified by the user, with guidance and examples from the vignette. The user can also specify the optimizer used during optimization procesure, and the method used to calculate standard error for the fitted parameters.

For details of the list of control arguments, please refer to \code{nloptr::nloptr}, \code{Rsolnp::solnp}, \code{nlminb}.
}
\examples{


data("rtn")
fit <- robGarch(rtn[1:604], methods="BM", fixed_pars = c(0.8, 3.0))


}
\references{
Muler, Nora & Yohai, Victor. (2008). Robust estimates for GARCH models. Journal of Statistical Planning and Inference. 138. 2918-2940.
}
